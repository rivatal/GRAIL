### Starting build.
# Target: grail.ml.depends, tags: { extension:ml, file:grail.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules grail.ml > grail.ml.depends
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules ast.ml > ast.ml.depends
# Target: astutils.ml.depends, tags: { extension:ml, file:astutils.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules astutils.ml > astutils.ml.depends
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmo ast.ml
# Target: codegen.ml.depends, tags: { extension:ml, file:codegen.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules codegen.ml > codegen.ml.depends
# Target: infer.ml.depends, tags: { extension:ml, file:infer.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules infer.ml > infer.ml.depends
# Target: astutils.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:astutils.cmo, file:astutils.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o astutils.cmo astutils.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o astutils.cmo astutils.ml
File "astutils.ml", line 8, characters 2-104:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Sub|Div|Equal|Neq|Leq|Geq|In|Fadd|Fsub|Fmult|Fdiv|Gadd|Eadd)
File "astutils.ml", line 14, characters 4-576:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(TVoid|TStmt (_, _))
File "astutils.ml", line 56, characters 2-366:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(CharLit _|FloatLit _|List _|Call (_, _)|Item (_, _)|Subset (_, _, _)|
Dot (_, _)|Unop (_, _)|Edge (_, _, _, _)|Graph (_, _)|Node (_, _)|Record _|
Noexpr)
File "astutils.ml", line 69, characters 8-22:
Warning 39: unused rec flag.
# Target: parser.mly, tags: { extension:mly, file:parser.mly, ocaml, ocamlyacc, package(llvm), package(llvm.analysis), parser, quiet }
/usr/bin/ocamlyacc parser.mly
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules parser.mli > parser.mli.depends
# Target: scanner.mll, tags: { extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, package(llvm), package(llvm.analysis), quiet }
/usr/bin/ocamllex -q scanner.mll
# Target: scanner.ml.depends, tags: { extension:ml, file:scanner.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules scanner.ml > scanner.ml.depends
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o parser.cmi parser.mli
# Target: codegen.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
File "codegen.ml", line 19, characters 27-176:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(T _|TFun (_, _)|TStmt (_, _))
File "codegen.ml", line 74, characters 32-556:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(AId (_, _)|ABinop (_, _, _, _)|AFun (_, _, _))
File "codegen.ml", line 121, characters 32-100:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(AAsn (_, _, _, _)|AReturn (_, _))
File "codegen.ml", line 121, characters 16-21:
Warning 39: unused rec flag.
# Target: infer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:infer.cmo, file:infer.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o infer.cmo infer.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o infer.cmo infer.ml
File "infer.ml", line 21, characters 4-1017:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(CharLit _|FloatLit _|List _|Item (_, _)|Subset (_, _, _)|Dot (_, _)|
Unop (_, _)|Edge (_, _, _, _)|Graph (_, _)|Node (_, _)|Record _|Noexpr)
File "infer.ml", line 60, characters 2-468:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(If (_, _, _)|While (_, _)|For (_, _, _, _)|Break|Continue)
File "infer.ml", line 59, characters 8-21:
Warning 39: unused rec flag.
File "infer.ml", line 90, characters 26-350:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Sub|Div|Equal|In|Fadd|Fsub|Fmult|Fdiv|Gadd|Eadd)
File "infer.ml", line 127, characters 2-144:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(TVoid|TStmt (_, _))
File "infer.ml", line 174, characters 8-18:
Warning 39: unused rec flag.
File "infer.ml", line 98, characters 16-18:
Warning 27: unused variable id.
File "infer.ml", line 100, characters 19-22:
Warning 27: unused variable idt.
File "infer.ml", line 111, characters 11-13:
Warning 27: unused variable id.
File "infer.ml", line 111, characters 22-28:
Warning 27: unused variable switch.
File "infer.ml", line 205, characters 26-28:
Warning 27: unused variable op.
File "infer.ml", line 205, characters 35-36:
Warning 27: unused variable t.
File "infer.ml", line 208, characters 20-22:
Warning 27: unused variable id.
File "infer.ml", line 208, characters 31-32:
Warning 27: unused variable t.
File "infer.ml", line 219, characters 21-22:
Warning 27: unused variable t.
File "infer.ml", line 222, characters 21-22:
Warning 27: unused variable t.
# Target: scanner.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmo scanner.ml
# Target: grail.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:grail.cmo, file:grail.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o grail.cmo grail.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o grail.cmo grail.ml
File "grail.ml", line 13, characters 4-260:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(CharLit _|FloatLit _|List _|Item (_, _)|Subset (_, _, _)|Dot (_, _)|
Unop (_, _)|Edge (_, _, _, _)|Graph (_, _)|Node (_, _)|Record _|Noexpr)
File "grail.ml", line 34, characters 16-217:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(If (_, _, _)|While (_, _)|For (_, _, _, _)|Break|Continue)
File "grail.ml", line 86, characters 11-14:
Warning 27: unused variable ast.
# Target: ast.cmx, tags: { compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmx ast.ml
# Target: astutils.cmx, tags: { compile, extension:cmx, extension:ml, file:astutils.cmx, file:astutils.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o astutils.cmx astutils.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o astutils.cmx astutils.ml
File "astutils.ml", line 8, characters 2-104:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Sub|Div|Equal|Neq|Leq|Geq|In|Fadd|Fsub|Fmult|Fdiv|Gadd|Eadd)
File "astutils.ml", line 14, characters 4-576:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(TVoid|TStmt (_, _))
File "astutils.ml", line 56, characters 2-366:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(CharLit _|FloatLit _|List _|Call (_, _)|Item (_, _)|Subset (_, _, _)|
Dot (_, _)|Unop (_, _)|Edge (_, _, _, _)|Graph (_, _)|Node (_, _)|Record _|
Noexpr)
File "astutils.ml", line 69, characters 8-22:
Warning 39: unused rec flag.
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules parser.ml > parser.ml.depends
# Target: parser.cmx, tags: { compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o parser.cmx parser.ml
# Target: codegen.cmx, tags: { compile, extension:cmx, extension:ml, file:codegen.cmx, file:codegen.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmx codegen.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmx codegen.ml
File "codegen.ml", line 19, characters 27-176:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(T _|TFun (_, _)|TStmt (_, _))
File "codegen.ml", line 74, characters 32-556:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(AId (_, _)|ABinop (_, _, _, _)|AFun (_, _, _))
File "codegen.ml", line 121, characters 32-100:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(AAsn (_, _, _, _)|AReturn (_, _))
File "codegen.ml", line 121, characters 16-21:
Warning 39: unused rec flag.
# Target: infer.cmx, tags: { compile, extension:cmx, extension:ml, file:infer.cmx, file:infer.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o infer.cmx infer.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o infer.cmx infer.ml
File "infer.ml", line 21, characters 4-1017:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(CharLit _|FloatLit _|List _|Item (_, _)|Subset (_, _, _)|Dot (_, _)|
Unop (_, _)|Edge (_, _, _, _)|Graph (_, _)|Node (_, _)|Record _|Noexpr)
File "infer.ml", line 60, characters 2-468:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(If (_, _, _)|While (_, _)|For (_, _, _, _)|Break|Continue)
File "infer.ml", line 59, characters 8-21:
Warning 39: unused rec flag.
File "infer.ml", line 90, characters 26-350:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Sub|Div|Equal|In|Fadd|Fsub|Fmult|Fdiv|Gadd|Eadd)
File "infer.ml", line 127, characters 2-144:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(TVoid|TStmt (_, _))
File "infer.ml", line 174, characters 8-18:
Warning 39: unused rec flag.
File "infer.ml", line 98, characters 16-18:
Warning 27: unused variable id.
File "infer.ml", line 100, characters 19-22:
Warning 27: unused variable idt.
File "infer.ml", line 111, characters 11-13:
Warning 27: unused variable id.
File "infer.ml", line 111, characters 22-28:
Warning 27: unused variable switch.
File "infer.ml", line 205, characters 26-28:
Warning 27: unused variable op.
File "infer.ml", line 205, characters 35-36:
Warning 27: unused variable t.
File "infer.ml", line 208, characters 20-22:
Warning 27: unused variable id.
File "infer.ml", line 208, characters 31-32:
Warning 27: unused variable t.
File "infer.ml", line 219, characters 21-22:
Warning 27: unused variable t.
File "infer.ml", line 222, characters 21-22:
Warning 27: unused variable t.
# Target: scanner.cmx, tags: { compile, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmx scanner.ml
# Target: grail.cmx, tags: { compile, extension:cmx, extension:ml, file:grail.cmx, file:grail.ml, implem, native, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o grail.cmx grail.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o grail.cmx grail.ml
File "grail.ml", line 13, characters 4-260:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(CharLit _|FloatLit _|List _|Item (_, _)|Subset (_, _, _)|Dot (_, _)|
Unop (_, _)|Edge (_, _, _, _)|Graph (_, _)|Node (_, _)|Record _|Noexpr)
File "grail.ml", line 34, characters 16-217:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(If (_, _, _)|While (_, _)|For (_, _, _, _)|Break|Continue)
File "grail.ml", line 86, characters 11-14:
Warning 27: unused variable ast.
# Target: grail.native, tags: { dont_link_with, extension:native, file:grail.native, link, native, ocaml, package(llvm), package(llvm.analysis), program, quiet }
ocamlfind ocamlopt -linkpkg -package llvm.analysis -package llvm ast.cmx astutils.cmx codegen.cmx infer.cmx parser.cmx scanner.cmx grail.cmx -o grail.native
# Compilation successful.
