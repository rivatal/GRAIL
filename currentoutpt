Welcome to Grail, the awesomest language!
> inferring new func

inferring  (call printint(a));
assigning formalschecking formals
getting in_id for printem#printint printint!1
updating calls for printint!1
updating map for  (call printint!1((a: any 5))) : void; 

inferring  (call printint(b));
assigning formalschecking formals
getting in_id for printem#printint printint!2
updating calls for printint!2
updating map for  (call printint!2((b: any 6))) : void; 

inferring  (call printint(c));
assigning formalschecking formals
getting in_id for printem#printint printint!3
updating calls for printint!3
updating map for  (call printint!3((c: any 7))) : void; 

inferring  (call printint(d));
assigning formalschecking formals
getting in_id for printem#printint printint!4
updating calls for printint!4
updating map for  (call printint!4((d: any 8))) : void; 
Inferring formals!
inferring  (call printint(a));
assigning formalschecking formals
getting in_id for printem#printint printint!5
updating calls for printint!5
updating map for  (call printint!5((a: any 5))) : void; 

inferring  (call printint(b));
assigning formalschecking formals
getting in_id for printem#printint printint!6
updating calls for printint!6
updating map for  (call printint!6((b: any 6))) : void; 

inferring  (call printint(c));
assigning formalschecking formals
getting in_id for printem#printint printint!7
updating calls for printint!7
updating map for  (call printint!7((c: any 7))) : void; 

inferring  (call printint(d));
assigning formalschecking formals
getting in_id for printem#printint printint!8
updating calls for printint!8
updating map for  (call printint!8((d: any 8))) : void; 
inferring new func

inferring  (call printem(42,17,192,8));
assigning formalschecking formals

inferring  (call printint(a));
assigning formalschecking formals
getting in_id for printem#printint printint!9
updating calls for printint!9
updating map for  (call printint!9((a: int))) : void; 

inferring  (call printint(b));
assigning formalschecking formals
getting in_id for printem#printint printint!10
updating calls for printint!10
updating map for  (call printint!10((b: int))) : void; 

inferring  (call printint(c));
assigning formalschecking formals
getting in_id for printem#printint printint!11
updating calls for printint!11
updating map for  (call printint!11((c: int))) : void; 

inferring  (call printint(d));
assigning formalschecking formals
getting in_id for printem#printint printint!12
updating calls for printint!12
updating map for  (call printint!12((d: int))) : void; 
getting in_id for main#printem printem!13
updating calls for printem!13
updating map for  (call printem!13((42: int),(17: int),(192: int),(8: int))) : void; 

inferring return 0;
146- intupdating map for return (0: int); int

Inferring formals!
inferring  (call printem(42,17,192,8));
assigning formalschecking formals

inferring  (call printint(a));
assigning formalschecking formals
getting in_id for printem#printint printint!14
updating calls for printint!14
updating map for  (call printint!14((a: int))) : void; 

inferring  (call printint(b));
assigning formalschecking formals
getting in_id for printem#printint printint!15
updating calls for printint!15
updating map for  (call printint!15((b: int))) : void; 

inferring  (call printint(c));
assigning formalschecking formals
getting in_id for printem#printint printint!16
updating calls for printint!16
updating map for  (call printint!16((c: int))) : void; 

inferring  (call printint(d));
assigning formalschecking formals
getting in_id for printem#printint printint!17
updating calls for printint!17
updating map for  (call printint!17((d: int))) : void; 
getting in_id for main#printem printem!18
updating calls for printem!18
updating map for  (call printem!18((42: int),(17: int),(192: int),(8: int))) : void; 

inferring return 0;
146- intupdating map for return (0: int); int

printem!13(a: int, b: int, c: int, d: int){ : void
 (call printint!9((a: int))) : void; 
 (call printint!10((b: int))) : void; 
 (call printint!11((c: int))) : void; 
 (call printint!12((d: int))) : void; 
}
main(){ : int
 (call printem!18((42: int),(17: int),(192: int),(8: int))) : void; 
return (0: int); int

}
