/usr/bin/lli

[1;33m ###### Testing test-comment [0m
./grail.native < tests/new_tests/test-comment.gl > test-comment.ll
/usr/bin/llvm-link test-comment.ll -o a.out
/usr/bin/llvm-link: test-comment.ll:1:1: error: expected top-level entity
updating map func for return (0: int); int
^
/usr/bin/llvm-link: error loading file 'test-comment.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-comment.outâ€™: No such file or directory
mv: cannot stat â€˜test-comment.diffâ€™: No such file or directory

[1;33m ###### Testing test-comparison [0m
./grail.native < tests/new_tests/test-comparison.gl > test-comparison.ll
/usr/bin/llvm-link test-comparison.ll -o a.out
/usr/bin/llvm-link: test-comparison.ll:1:1: error: expected top-level entity
matching x with type: strassigning x to strupdating map func for  (call print((EQ works: str))) : void; 
^
/usr/bin/llvm-link: error loading file 'test-comparison.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-comparison.outâ€™: No such file or directory
mv: cannot stat â€˜test-comparison.diffâ€™: No such file or directory

[1;33m ###### Testing test-float-calculation [0m
./grail.native < tests/new_tests/test-float-calculation.gl > test-float-calculation.ll
/usr/bin/llvm-link test-float-calculation.ll -o a.out
/usr/bin/llvm-link: test-float-calculation.ll:1:1: error: expected top-level entity
updating map func for (a: float) = (1.1: float); 
^
/usr/bin/llvm-link: error loading file 'test-float-calculation.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-float-calculation.outâ€™: No such file or directory
mv: cannot stat â€˜test-float-calculation.diffâ€™: No such file or directory

[1;33m ###### Testing test-for-1 [0m
./grail.native < tests/new_tests/test-for-1.gl > test-for-1.ll
/usr/bin/llvm-link test-for-1.ll -o a.out
/usr/bin/llvm-link: test-for-1.ll:1:1: error: expected top-level entity
updating map func for (i: int) = (0: int); 
^
/usr/bin/llvm-link: error loading file 'test-for-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-for-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-for-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-for-2 [0m
./grail.native < tests/new_tests/test-for-2.gl > test-for-2.ll
/usr/bin/llvm-link test-for-2.ll -o a.out
/usr/bin/llvm-link: test-for-2.ll:1:1: error: expected top-level entity
updating map func for (a: int) = (5: int); 
^
/usr/bin/llvm-link: error loading file 'test-for-2.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-for-2.outâ€™: No such file or directory
mv: cannot stat â€˜test-for-2.diffâ€™: No such file or directory

[1;33m ###### Testing test-forin-1 [0m
./grail.native < tests/new_tests/test-forin-1.gl > test-forin-1.ll
/usr/bin/llvm-link test-forin-1.ll -o a.out
/usr/bin/llvm-link: test-forin-1.ll:1:1: error: expected top-level entity
updating map func for (a: list of int) = ((1: int)(2: int)(3: int) : list of int); 
^
/usr/bin/llvm-link: error loading file 'test-forin-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-forin-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-forin-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-forin-2 [0m
./grail.native < tests/new_tests/test-forin-2.gl > test-forin-2.ll
/usr/bin/llvm-link test-forin-2.ll -o a.out
/usr/bin/llvm-link: test-forin-2.ll:1:1: error: expected top-level entity
updating map func for (a: list of str) = ((a: str)(b: str)(c: str) : list of str); 
^
/usr/bin/llvm-link: error loading file 'test-forin-2.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-forin-2.outâ€™: No such file or directory
mv: cannot stat â€˜test-forin-2.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-1 [0m
./grail.native < tests/new_tests/test-function-call-1.gl > test-function-call-1.ll
/usr/bin/llvm-link test-function-call-1.ll -o a.out
/usr/bin/llvm-link: test-function-call-1.ll:1:1: error: expected top-level entity
updating map func for (x: int) = (3: int); 
^
/usr/bin/llvm-link: error loading file 'test-function-call-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-2 [0m
./grail.native < tests/new_tests/test-function-call-2.gl > test-function-call-2.ll
/usr/bin/llvm-link test-function-call-2.ll -o a.out
/usr/bin/llvm-link: test-function-call-2.ll:1:1: error: expected top-level entity
matching x with type: strassigning x to strupdating map func for  (call print((IN F: str))) : void; 
^
/usr/bin/llvm-link: error loading file 'test-function-call-2.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-2.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-2.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-3 [0m
./grail.native < tests/new_tests/test-function-call-3.gl > test-function-call-3.ll
/usr/bin/llvm-link test-function-call-3.ll -o a.out
/usr/bin/llvm-link: test-function-call-3.ll:1:1: error: expected top-level entity
updating map func for (a: int) = ((a: int) + (1: int): int); 
^
/usr/bin/llvm-link: error loading file 'test-function-call-3.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-3.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-3.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-4 [0m
./grail.native < tests/new_tests/test-function-call-4.gl > test-function-call-4.ll
Fatal error: exception Failure("provided a bad type")
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-4.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-4.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-5 [0m
./grail.native < tests/new_tests/test-function-call-5.gl > test-function-call-5.ll
/usr/bin/llvm-link test-function-call-5.ll -o a.out
/usr/bin/llvm-link: test-function-call-5.ll:1:1: error: expected top-level entity
updating map func for (c: int) = ((a: int) + (b: int): int); 
^
/usr/bin/llvm-link: error loading file 'test-function-call-5.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-5.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-5.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-6 [0m
./grail.native < tests/new_tests/test-function-call-6.gl > test-function-call-6.ll
/usr/bin/llvm-link test-function-call-6.ll -o a.out
/usr/bin/llvm-link: test-function-call-6.ll:1:1: error: expected top-level entity
updating map func for return (a: 5); 5
^
/usr/bin/llvm-link: error loading file 'test-function-call-6.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-6.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-6.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-7 [0m
./grail.native < tests/new_tests/test-function-call-7.gl > test-function-call-7.ll
/usr/bin/llvm-link test-function-call-7.ll -o a.out
/usr/bin/llvm-link: test-function-call-7.ll:1:1: error: expected top-level entity
updating map func for (d: int) = ((a: int) + (c: int): int); 
^
/usr/bin/llvm-link: error loading file 'test-function-call-7.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-7.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-7.diffâ€™: No such file or directory

[1;33m ###### Testing test-function-call-8 [0m
./grail.native < tests/new_tests/test-function-call-8.gl > test-function-call-8.ll
/usr/bin/llvm-link test-function-call-8.ll -o a.out
/usr/bin/llvm-link: test-function-call-8.ll:1:1: error: expected top-level entity
matching x with type: intassigning x to intupdating map func for  (call printint(((a: int) + (3: int): int))) : void; 
^
/usr/bin/llvm-link: error loading file 'test-function-call-8.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-function-call-8.outâ€™: No such file or directory
mv: cannot stat â€˜test-function-call-8.diffâ€™: No such file or directory

[1;33m ###### Testing test-gcd [0m
./grail.native < tests/new_tests/test-gcd.gl > test-gcd.ll
/usr/bin/llvm-link test-gcd.ll -o a.out
/usr/bin/llvm-link: test-gcd.ll:1:1: error: expected top-level entity
updating map func for (a: int) = ((a: int) - (b: int): int); 
^
/usr/bin/llvm-link: error loading file 'test-gcd.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-gcd.outâ€™: No such file or directory
mv: cannot stat â€˜test-gcd.diffâ€™: No such file or directory

[1;33m ###### Testing test-hello [0m
./grail.native < tests/new_tests/test-hello.gl > test-hello.ll
/usr/bin/llvm-link test-hello.ll -o a.out
/usr/bin/llvm-link: test-hello.ll:1:1: error: expected top-level entity
matching x with type: strassigning x to strupdating map func for  (call print((Hello, world!: str))) : void; 
^
/usr/bin/llvm-link: error loading file 'test-hello.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-hello.outâ€™: No such file or directory
mv: cannot stat â€˜test-hello.diffâ€™: No such file or directory

[1;33m ###### Testing test-if-loop-1 [0m
./grail.native < tests/new_tests/test-if-loop-1.gl > test-if-loop-1.ll
/usr/bin/llvm-link test-if-loop-1.ll -o a.out
/usr/bin/llvm-link: test-if-loop-1.ll:1:1: error: expected top-level entity
updating map func for (a: int) = (5: int); 
^
/usr/bin/llvm-link: error loading file 'test-if-loop-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-if-loop-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-if-loop-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-if-loop-2 [0m
./grail.native < tests/new_tests/test-if-loop-2.gl > test-if-loop-2.ll
/usr/bin/llvm-link test-if-loop-2.ll -o a.out
/usr/bin/llvm-link: test-if-loop-2.ll:1:1: error: expected top-level entity
updating map func for (a: int) = (5: int); 
^
/usr/bin/llvm-link: error loading file 'test-if-loop-2.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-if-loop-2.outâ€™: No such file or directory
mv: cannot stat â€˜test-if-loop-2.diffâ€™: No such file or directory

[1;33m ###### Testing test-if-loop-3 [0m
./grail.native < tests/new_tests/test-if-loop-3.gl > test-if-loop-3.ll
/usr/bin/llvm-link test-if-loop-3.ll -o a.out
/usr/bin/llvm-link: test-if-loop-3.ll:1:1: error: expected top-level entity
updating map func for (a: int) = (5: int); 
^
/usr/bin/llvm-link: error loading file 'test-if-loop-3.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-if-loop-3.outâ€™: No such file or directory
mv: cannot stat â€˜test-if-loop-3.diffâ€™: No such file or directory

[1;33m ###### Testing test-list-1 [0m
./grail.native < tests/new_tests/test-list-1.gl > test-list-1.ll
/usr/bin/llvm-link test-list-1.ll -o a.out
/usr/bin/llvm-link: test-list-1.ll:1:1: error: expected top-level entity
updating map func for (a: list of int) = ((1: int)(2: int)(3: int)(4: int)(5: int) : list of int); 
^
/usr/bin/llvm-link: error loading file 'test-list-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-list-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-list-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-list-2 [0m
./grail.native < tests/new_tests/test-list-2.gl > test-list-2.ll
/usr/bin/llvm-link test-list-2.ll -o a.out
/usr/bin/llvm-link: test-list-2.ll:1:1: error: expected top-level entity
updating map func for (x: list of int) = ((1: int)(2: int)(3: int) : list of int); 
^
/usr/bin/llvm-link: error loading file 'test-list-2.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-list-2.outâ€™: No such file or directory
mv: cannot stat â€˜test-list-2.diffâ€™: No such file or directory

[1;33m ###### Testing test-list-3 [0m
./grail.native < tests/new_tests/test-list-3.gl > test-list-3.ll
/usr/bin/llvm-link test-list-3.ll -o a.out
/usr/bin/llvm-link: test-list-3.ll:1:1: error: expected top-level entity
updating map func for (x: list of str) = ((cat: str)(bird: str) : list of str); 
^
/usr/bin/llvm-link: error loading file 'test-list-3.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-list-3.outâ€™: No such file or directory
mv: cannot stat â€˜test-list-3.diffâ€™: No such file or directory

[1;33m ###### Testing test-print [0m
./grail.native < tests/new_tests/test-print.gl > test-print.ll
/usr/bin/llvm-link test-print.ll -o a.out
/usr/bin/llvm-link: test-print.ll:1:1: error: expected top-level entity
matching x with type: strassigning x to strupdating map func for  (call print((String: str))) : void; 
^
/usr/bin/llvm-link: error loading file 'test-print.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-print.outâ€™: No such file or directory
mv: cannot stat â€˜test-print.diffâ€™: No such file or directory

[1;33m ###### Testing test-record-1 [0m
./grail.native < tests/new_tests/test-record-1.gl > test-record-1.ll
/usr/bin/llvm-link test-record-1.ll -o a.out
/usr/bin/llvm-link: test-record-1.ll:1:1: error: expected top-level entity
updating map func for (myrec: record 6) = record 6{b (2: int)a (1: int)}; 
^
/usr/bin/llvm-link: error loading file 'test-record-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-record-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-record-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-record-2 [0m
./grail.native < tests/new_tests/test-record-2.gl > test-record-2.ll
/usr/bin/llvm-link test-record-2.ll -o a.out
/usr/bin/llvm-link: test-record-2.ll:1:1: error: expected top-level entity
updating map func for (myrec: record 6) = record 6{b (2: int)a (yeah: str)}; 
^
/usr/bin/llvm-link: error loading file 'test-record-2.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-record-2.outâ€™: No such file or directory
mv: cannot stat â€˜test-record-2.diffâ€™: No such file or directory

[1;33m ###### Testing test-return-1 [0m
./grail.native < tests/new_tests/test-return-1.gl > test-return-1.ll
/usr/bin/llvm-link test-return-1.ll -o a.out
/usr/bin/llvm-link: test-return-1.ll:1:1: error: expected top-level entity
updating map func for (i: str) = (hello world: str); 
^
/usr/bin/llvm-link: error loading file 'test-return-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-return-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-return-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-size-1 [0m
./grail.native < tests/new_tests/test-size-1.gl > test-size-1.ll
/usr/bin/llvm-link test-size-1.ll -o a.out
/usr/bin/llvm-link: test-size-1.ll:1:1: error: expected top-level entity
updating map func for (a: list of int) = ((1: int)(2: int)(3: int) : list of int); 
^
/usr/bin/llvm-link: error loading file 'test-size-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-size-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-size-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-while-1 [0m
./grail.native < tests/new_tests/test-while-1.gl > test-while-1.ll
/usr/bin/llvm-link test-while-1.ll -o a.out
/usr/bin/llvm-link: test-while-1.ll:1:1: error: expected top-level entity
updating map func for (i: int) = (5: int); 
^
/usr/bin/llvm-link: error loading file 'test-while-1.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-while-1.outâ€™: No such file or directory
mv: cannot stat â€˜test-while-1.diffâ€™: No such file or directory

[1;33m ###### Testing test-while-2 [0m
./grail.native < tests/new_tests/test-while-2.gl > test-while-2.ll
/usr/bin/llvm-link test-while-2.ll -o a.out
/usr/bin/llvm-link: test-while-2.ll:1:1: error: expected top-level entity
updating map func for (j: int) = (0: int); 
^
/usr/bin/llvm-link: error loading file 'test-while-2.ll'
[0;31m ###### FAILED [0m
mv: cannot stat â€˜test-while-2.outâ€™: No such file or directory
mv: cannot stat â€˜test-while-2.diffâ€™: No such file or directory

[1;33m ###### Testing fail-assign-1 [0m
./grail.native < tests/new_tests/fail-assign-1.gl 2> fail-assign-1.err >> testall.log
diff -b fail-assign-1.err tests/new_tests/fail-assign-1.err > fail-assign-1.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-assign-2 [0m
./grail.native < tests/new_tests/fail-assign-2.gl 2> fail-assign-2.err >> testall.log
updating map func for (b: bool) = (true: bool); 
diff -b fail-assign-2.err tests/new_tests/fail-assign-2.err > fail-assign-2.diff
FAILED fail-assign-2.err differs from tests/new_tests/fail-assign-2.err
[0;31m ###### FAILED [0m

[1;33m ###### Testing fail-dead-1 [0m
./grail.native < tests/new_tests/fail-dead-1.gl 2> fail-dead-1.err >> testall.log
diff -b fail-dead-1.err tests/new_tests/fail-dead-1.err > fail-dead-1.diff
FAILED fail-dead-1.err differs from tests/new_tests/fail-dead-1.err
[0;31m ###### FAILED [0m

[1;33m ###### Testing fail-dead-2 [0m
./grail.native < tests/new_tests/fail-dead-2.gl 2> fail-dead-2.err >> testall.log
diff -b fail-dead-2.err tests/new_tests/fail-dead-2.err > fail-dead-2.diff
FAILED fail-dead-2.err differs from tests/new_tests/fail-dead-2.err
[0;31m ###### FAILED [0m

[1;33m ###### Testing fail-expr-1 [0m
./grail.native < tests/new_tests/fail-expr-1.gl 2> fail-expr-1.err >> testall.log
updating map func for (a: int) = (1: int); 
updating map func for (b: bool) = (true: bool); 
diff -b fail-expr-1.err tests/new_tests/fail-expr-1.err > fail-expr-1.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-expr-2 [0m
./grail.native < tests/new_tests/fail-expr-2.gl 2> fail-expr-2.err >> testall.log
updating map func for (b: bool) = (true: bool); 
updating map func for (a: int) = (6: int); 
diff -b fail-expr-2.err tests/new_tests/fail-expr-2.err > fail-expr-2.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-for-1 [0m
./grail.native < tests/new_tests/fail-for-1.gl 2> fail-for-1.err >> testall.log
updating map func for (i: int) = (0: int); 
updating map func for (i: int) = (0: int); 
updating map func for (i: int) = ((i: int) + (1: int): int); 
diff -b fail-for-1.err tests/new_tests/fail-for-1.err > fail-for-1.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-for-2 [0m
./grail.native < tests/new_tests/fail-for-2.gl 2> fail-for-2.err >> testall.log
updating map func for (i: int) = (0: int); 
updating map func for (i: int) = (0: int); 
diff -b fail-for-2.err tests/new_tests/fail-for-2.err > fail-for-2.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-for-3 [0m
./grail.native < tests/new_tests/fail-for-3.gl 2> fail-for-3.err >> testall.log
updating map func for (i: int) = (0: int); 
updating map func for (i: int) = (0: int); 
diff -b fail-for-3.err tests/new_tests/fail-for-3.err > fail-for-3.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-for-4 [0m
./grail.native < tests/new_tests/fail-for-4.gl 2> fail-for-4.err >> testall.log
updating map func for (i: int) = (0: int); 
updating map func for (i: int) = (0: int); 
diff -b fail-for-4.err tests/new_tests/fail-for-4.err > fail-for-4.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-for-5 [0m
./grail.native < tests/new_tests/fail-for-5.gl 2> fail-for-5.err >> testall.log
updating map func for (i: int) = (0: int); 
updating map func for (i: int) = (0: int); 
updating map func for (i: int) = ((i: int) + (1: int): int); 
updating map func for return (42: int); int

updating map func for if (((i: int) == (3: int): bool)) {return (42: int); int

; 
updating map func for return (42: int); int

updating map func for for ((i: int) = (0: int); 
((i: int) < (10: int): bool) ; (i: int) = ((i: int) + (1: int): int); 
if (((i: int) == (3: int): bool)) {return (42: int); int

; 

updating map func for (i: int) = (0: int); 
updating map func for (i: int) = ((i: int) + (1: int): int); 
updating map func for if (((i: int) == (3: int): bool)) {return (42: int); int

; 
updating map func for return (42: int); int

updating map func for (j: int) = (0: int); 
updating map func for (i: int) = ((i: int) + (1: int): int); 
updating map func for for ((j: int) = (0: int); 
((i: int) < (10: int): bool) ; (i: int) = ((i: int) + (1: int): int); 

updating map func for (j: int) = (0: int); 
updating map func for (i: int) = ((i: int) + (1: int): int); 
updating map func for return (0: int); int

diff -b fail-for-5.err tests/new_tests/fail-for-5.err > fail-for-5.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-func-arg-num [0m
./grail.native < tests/new_tests/fail-func-arg-num.gl 2> fail-func-arg-num.err >> testall.log
updating map func for return (0: int); int

updating map func for (b: int) = (10: int); 
diff -b fail-func-arg-num.err tests/new_tests/fail-func-arg-num.err > fail-func-arg-num.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-function-return [0m
./grail.native < tests/new_tests/fail-function-return.gl 2> fail-function-return.err >> testall.log
updating map func for return (x: 5); 5

updating map func for (x: int) = (3: int); 
matching x with type: strassigning x to strupdating map func for return (x: str); str

updating map func for  (call function((sdf: str))) : str; 
matching x with type: str; ModuleID = 'Grail'

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt1 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt2 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt3 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@str = private unnamed_addr constant [4 x i8] c"sdf\00"

declare i32 @printf(i8*, ...)

declare i32 @sample_display(i32)

define i8* @"function!1"(i8* %x) {
entry:
  %x1 = alloca i8*
  store i8* %x, i8** %x1
  %x2 = load i8** %x1
  ret i8* %x2
}

define void @main() {
entry:
  %x = alloca i32
  store i32 3, i32* %x
  %"function!1_result" = call i8* @"function!1"(i8* getelementptr inbounds ([4 x i8]* @str, i32 0, i32 0))
  ret void
}
[0;31m ###### FAILED [0m
mv: cannot stat â€˜fail-function-return.diffâ€™: No such file or directory

[1;33m ###### Testing fail-if-1 [0m
./grail.native < tests/new_tests/fail-if-1.gl 2> fail-if-1.err >> testall.log
updating map func for (i: int) = (42: int); 
diff -b fail-if-1.err tests/new_tests/fail-if-1.err > fail-if-1.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-if-2 [0m
./grail.native < tests/new_tests/fail-if-2.gl 2> fail-if-2.err >> testall.log
diff -b fail-if-2.err tests/new_tests/fail-if-2.err > fail-if-2.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-if-3 [0m
./grail.native < tests/new_tests/fail-if-3.gl 2> fail-if-3.err >> testall.log
updating map func for if ((true: bool)) {; 
updating map func for if ((false: bool)) {; 
diff -b fail-if-3.err tests/new_tests/fail-if-3.err > fail-if-3.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-nomain [0m
./grail.native < tests/new_tests/fail-nomain.gl 2> fail-nomain.err >> testall.log
; ModuleID = 'Grail'

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt1 = private unnamed_addr constant [4 x i8] c"%f\0A\00"

declare i32 @printf(i8*, ...)

declare i32 @sample_display(i32)

define void @f() {
entry:
  ret void
}
[0;31m ###### FAILED [0m
mv: cannot stat â€˜fail-nomain.diffâ€™: No such file or directory

[1;33m ###### Testing fail-record-1 [0m
./grail.native < tests/new_tests/fail-record-1.gl 2> fail-record-1.err >> testall.log
updating map func for (myrec: record 6) = record 6{b (2: int)a (1: int)}; 
matching x with type: intassigning x to intupdating map func for  (call printint(((myrec: record 6).a : int))) : void; 
matching x with type: intupdating map func for (y: record 6) = (myrec: record 6); 
updating map func for ((y: record 6).a : int) = (yeah: str); 
matching x with type: intassigning x to intdiff -b fail-record-1.err tests/new_tests/fail-record-1.err > fail-record-1.diff
FAILED fail-record-1.err differs from tests/new_tests/fail-record-1.err
[0;31m ###### FAILED [0m

[1;33m ###### Testing fail-return-1 [0m
./grail.native < tests/new_tests/fail-return-1.gl 2> fail-return-1.err >> testall.log
updating map func for return (true: bool); bool

; ModuleID = 'Grail'

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt1 = private unnamed_addr constant [4 x i8] c"%f\0A\00"

declare i32 @printf(i8*, ...)

declare i32 @sample_display(i32)

define i1 @main() {
entry:
  ret i1 true
}
[0;31m ###### FAILED [0m
mv: cannot stat â€˜fail-return-1.diffâ€™: No such file or directory

[1;33m ###### Testing fail-return-2 [0m
./grail.native < tests/new_tests/fail-return-2.gl 2> fail-return-2.err >> testall.log
updating map func for return (42: int); int

updating map func for return (0: int); int

updating map func for if ((true: bool)) {return (42: int); int

; return (0: int); int


updating map func for return (42: int); int

updating map func for return (0: int); int

diff -b fail-return-2.err tests/new_tests/fail-return-2.err > fail-return-2.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-return-twice [0m
./grail.native < tests/new_tests/fail-return-twice.gl 2> fail-return-twice.err >> testall.log
updating map func for return (x: 5); 5

updating map func for (z: int) = (3: int); 
matching x with type: intassigning x to intupdating map func for return (x: int); int

updating map func for  (call f((z: int))) : int; 
matching x with type: intupdating map func for (y: str) = (sdf: str); 
matching x with type: strassigning x to strupdating map func for return (x: str); str

updating map func for  (call f((y: str))) : str; 
matching x with type: str; ModuleID = 'Grail'

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt1 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt2 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt3 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@fmt4 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt5 = private unnamed_addr constant [4 x i8] c"%f\0A\00"
@str = private unnamed_addr constant [4 x i8] c"sdf\00"

declare i32 @printf(i8*, ...)

declare i32 @sample_display(i32)

define i32 @"f!1"(i32 %x) {
entry:
  %x1 = alloca i32
  store i32 %x, i32* %x1
  %x2 = load i32* %x1
  ret i32 %x2
}

define i8* @"f!2"(i8* %x) {
entry:
  %x1 = alloca i8*
  store i8* %x, i8** %x1
  %x2 = load i8** %x1
  ret i8* %x2
}

define void @main() {
entry:
  %z = alloca i32
  store i32 3, i32* %z
  %z1 = load i32* %z
  %"f!1_result" = call i32 @"f!1"(i32 %z1)
  %y = alloca i8*
  store i8* getelementptr inbounds ([4 x i8]* @str, i32 0, i32 0), i8** %y
  %y2 = load i8** %y
  %"f!2_result" = call i8* @"f!2"(i8* %y2)
  ret void
}
[0;31m ###### FAILED [0m
mv: cannot stat â€˜fail-return-twice.diffâ€™: No such file or directory

[1;33m ###### Testing fail-while-1 [0m
./grail.native < tests/new_tests/fail-while-1.gl 2> fail-while-1.err >> testall.log
updating map func for (i: int) = (6: int); 
updating map func for (i: int) = ((i: int) + (1: int): int); 
updating map func for while ((true: bool)) {(i: int) = ((i: int) + (1: int): int); 
}
diff -b fail-while-1.err tests/new_tests/fail-while-1.err > fail-while-1.diff
[0;32m ###### SUCCESS [0m

[1;33m ###### Testing fail-while-2 [0m
./grail.native < tests/new_tests/fail-while-2.gl 2> fail-while-2.err >> testall.log
diff -b fail-while-2.err tests/new_tests/fail-while-2.err > fail-while-2.diff
FAILED fail-while-2.err differs from tests/new_tests/fail-while-2.err
[0;31m ###### FAILED [0m
